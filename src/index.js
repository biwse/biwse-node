/**
 * Biwse API V1 Reference
 * This API documentation generated from OpenAPI specification. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Address from './model/Address';
import AppInvoice from './model/AppInvoice';
import AppInvoiceCreated from './model/AppInvoiceCreated';
import Error from './model/Error';
import InvoiceStatus from './model/InvoiceStatus';
import InvoiceStatusData from './model/InvoiceStatusData';
import Payment from './model/Payment';
import Payments from './model/Payments';
import Transaction from './model/Transaction';
import WalletBalance from './model/WalletBalance';
import WalletInvoice from './model/WalletInvoice';
import WalletInvoiceCreated from './model/WalletInvoiceCreated';
import AppApi from './api/AppApi';


/**
* This_API_documentation_generated_from_OpenAPI_specification_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var biwse = require('index'); // See note below*.
* var xxxSvc = new biwse.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new biwse.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new biwse.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new biwse.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The AppInvoice model constructor.
     * @property {module:model/AppInvoice}
     */
    AppInvoice,

    /**
     * The AppInvoiceCreated model constructor.
     * @property {module:model/AppInvoiceCreated}
     */
    AppInvoiceCreated,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The InvoiceStatus model constructor.
     * @property {module:model/InvoiceStatus}
     */
    InvoiceStatus,

    /**
     * The InvoiceStatusData model constructor.
     * @property {module:model/InvoiceStatusData}
     */
    InvoiceStatusData,

    /**
     * The Payment model constructor.
     * @property {module:model/Payment}
     */
    Payment,

    /**
     * The Payments model constructor.
     * @property {module:model/Payments}
     */
    Payments,

    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction,

    /**
     * The WalletBalance model constructor.
     * @property {module:model/WalletBalance}
     */
    WalletBalance,

    /**
     * The WalletInvoice model constructor.
     * @property {module:model/WalletInvoice}
     */
    WalletInvoice,

    /**
     * The WalletInvoiceCreated model constructor.
     * @property {module:model/WalletInvoiceCreated}
     */
    WalletInvoiceCreated,

    /**
    * The AppApi service constructor.
    * @property {module:api/AppApi}
    */
    AppApi
};
